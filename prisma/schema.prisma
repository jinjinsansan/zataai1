// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  name         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  subscription Subscription?
  payments     Payment[]
  chatLogs     ChatLog[]
}

model Subscription {
  id                    String    @id @default(cuid())
  userId                String    @unique
  status                String    @default("trial") // trial, active, inactive, canceled
  trialEnd              DateTime?
  currentPeriodEnd      DateTime?
  
  // Stripe関連
  stripeCustomerId      String?
  stripeSubscriptionId  String?
  
  // PayPal関連
  paypalOrderId         String?
  paypalSubscriptionId  String?
  
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Payment {
  id                    String   @id @default(cuid())
  userId                String
  amount                Float
  currency              String   @default("JPY")
  status                String   @default("pending") // pending, succeeded, failed
  description           String?
  
  // Stripe関連
  stripePaymentIntentId String?
  
  // PayPal関連
  paypalPaymentId       String?
  
  createdAt             DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ChatLog {
  id        String   @id @default(cuid())
  userId    String
  question  String
  answer    String
  metadata  Json?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}